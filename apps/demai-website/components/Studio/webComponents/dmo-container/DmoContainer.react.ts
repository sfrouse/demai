/* eslint-disable */
// @ts-nocheck
/**
 * THIS FILE IS AUTOGENERATED. DO NOT EDIT THIS FILE DIRECTLY.
 * Any changes made here will be overwritten during the next build.
 * 
 * Generated on: 2025-03-17
 */
import React, { useEffect, useRef } from 'react';
import { createElement } from "@lit-labs/ssr-react";


interface DmoContainerProps {
    _backgroundColor: "dmai_background_default" | "dmai_background_subdued" | "dmai_background_primary_default" | "dmai_background_primary_subdued" | "dmai_background_secondary_default" | "dmai_background_tertiary_default" | "dmai_background_neutral_default" | "dmai_background_minimal" | undefined,
	_borderColor: "dmai_border_default" | "dmai_border_subdued" | "dmai_border_inverted" | "dmai_border_primary_default" | "dmai_border_secondary_default" | "dmai_border_tertiary_default" | "dmai_border_on_surface_default" | "dmai_border_warning" | "dmai_border_danger" | undefined,
	_borderWidth: "dmai_border_width_none" | "dmai_border_width_sm" | "dmai_border_width_md" | "dmai_border_width_lg" | undefined,
	_borderStyle: "none" | "solid" | "dashed" | undefined,
	_cornerRadius: "dmai_border_radius_none" | "dmai_border_radius_sm" | "dmai_border_radius_md" | "dmai_border_radius_lg" | "dmai_border_radius_full" | undefined,
	_padding: "dmai_padding_0x" | "dmai_padding_0_5x" | "dmai_padding_1x" | "dmai_padding_2x" | "dmai_padding_3x" | "dmai_padding_4x" | "dmai_padding_5x" | "dmai_padding_6x" | "dmai_padding_7x" | "dmai_padding_8x" | "dmai_padding_9x" | "dmai_padding_10x" | undefined,
	_gap: "dmai_gap_0x" | "dmai_gap_0_5x" | "dmai_gap_1x" | "dmai_gap_2x" | "dmai_gap_3x" | "dmai_gap_4x" | "dmai_gap_5x" | "dmai_gap_6x" | "dmai_gap_7x" | "dmai_gap_8x" | "dmai_gap_9x" | "dmai_gap_10x" | undefined,
	_layoutDirection: "row" | "column" | undefined,
	_alignItems: "start" | "center" | "end" | "stretch" | undefined,
	_justifyContent: "start" | "center" | "end" | "space-between" | undefined,
	_horizontalResizing: "fixed" | "fill" | "hug" | undefined,
	_width: string,
	_horizontalFlexGrow: "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | undefined,
	_verticalResizing: "fixed" | "fill" | "hug" | undefined,
	_height: string,
	_verticalFlexGrow: "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | undefined,
	internalLabel: string,
}

const DmoContainer: React.FC<DmoContainerProps> = (props) => {
    /* return <dmo-container
        _backgroundColor={props._backgroundColor}
		_borderColor={props._borderColor}
		_borderWidth={props._borderWidth}
		_borderStyle={props._borderStyle}
		_cornerRadius={props._cornerRadius}
		_padding={props._padding}
		_gap={props._gap}
		_layoutDirection={props._layoutDirection}
		_alignItems={props._alignItems}
		_justifyContent={props._justifyContent}
		_horizontalResizing={props._horizontalResizing}
		_width={props._width}
		_horizontalFlexGrow={props._horizontalFlexGrow}
		_verticalResizing={props._verticalResizing}
		_height={props._height}
		_verticalFlexGrow={props._verticalFlexGrow}
		internalLabel={props.internalLabel}>
			{props.children}
        </dmo-container>;*/

    const attrs = {
        _backgroundColor:props._backgroundColor,
            _borderColor:props._borderColor,
            _borderWidth:props._borderWidth,
            _borderStyle:props._borderStyle,
            _cornerRadius:props._cornerRadius,
            _padding:props._padding,
            _gap:props._gap,
            _layoutDirection:props._layoutDirection,
            _alignItems:props._alignItems,
            _justifyContent:props._justifyContent,
            _horizontalResizing:props._horizontalResizing,
            _width:props._width,
            _horizontalFlexGrow:props._horizontalFlexGrow,
            _verticalResizing:props._verticalResizing,
            _height:props._height,
            _verticalFlexGrow:props._verticalFlexGrow,
            internalLabel:props.internalLabel
    };

    const filteredProps = Object.entries(attrs).reduce((acc, [key, value]) => {
        if (value !== undefined) {
            acc[key] = value;
        }
        return acc;
    }, {});

    return createElement(
        "dmo-container",
        {
            suppressHydrationWarning: true,
            ...filteredProps
        },
			props.children
    );
};

export default DmoContainer;

declare global {
    namespace JSX {
        interface IntrinsicElements {
            'dmo-container': React.DetailedHTMLProps<
                React.HTMLAttributes<HTMLElement>,
                Partial<DmoContainerProps>,
                HTMLElement
            >
        }
    }
}